<?xml version="1.0"?>
<xgridfit>
 <!-- X, Ð¥ -->
 <glyph ps-name="X" init-graphics="yes">
  
  <!--
      
      Copyright (C) 2007, 2008, 2009  Andrey V. Panov
      
      This program is free software; you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation; either version 2 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program; if not, write to the Free Software
      Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
      -->
  
  <param name="baseline" value="cap-x-baseline"/>
  <param name="x-height" value="cap-x-height"/>
  <param name="thin-diag" value="cap-diag"/>
  <param name="thick-diag" value="cap--diag"/>
  <param name="i-lbearing" value="cap-i-lbearing"/>
<!--   <param name="x-lbearing" value="cap-x-lbearing"/> -->
  <constant name="left-left-bottom" value="0"/>
  <constant name="intersect-left" value="left-left-bottom + 1"/>
  <constant name="left-left-top" value="intersect-left + 1"/>
  <constant name="left-right-top" value="left-left-top + 1"/>
  <constant name="intersect-top" value="left-right-top + 1"/>
  <constant name="right-left-top" value="intersect-top + 1"/>
  <constant name="right-right-top" value="right-left-top + 1"/>
  <constant name="intersect-right" value="right-right-top + 1"/>
  <constant name="right-right-bottom" value="intersect-right + 1"/>
  <constant name="right-left-bottom" value="right-right-bottom + 1"/>
  <constant name="intersect-bottom" value="right-left-bottom + 1"/>
  <constant name="left-right-bottom" value="intersect-bottom + 1"/>
  <constant name="last" value="left-right-bottom"/>
  <!--  <constant name="left-bearing" value="last + 1"/> -->
  <line name="left-thinstem">
   <point num="left-left-bottom"/>
   <point num="right-left-top"/>
  </line>
  <line name="right-thinstem">
   <point num="left-right-bottom"/>
   <point num="right-right-top"/>
  </line>
  <line name="left-thickstem">
   <point num="left-left-top"/>
   <point num="right-left-bottom"/>
  </line>
  <line name="right-thickstem">
   <point num="left-right-top"/>
   <point num="right-right-bottom"/>
  </line>
  
  <set-vectors axis="y"/>
  <move distance="baseline">
   <point num="left-left-bottom"/>
   <align>
    <point num="right-right-bottom"/>
    <point num="right-left-bottom"/>
    <point num="left-right-bottom"/>
   </align>
  </move>
  <move distance="x-height">
   <point num="left-left-top"/>
   <align>
    <point num="left-right-top"/>
    <point num="right-left-top"/>
    <point num="right-right-top"/>
   </align>
  </move>
  
  <set-vectors axis="x"/>
  <move min-distance="no" color="white"> <!--distance="x-lbearing"-->
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="left-left-bottom"/>
   <delta compile-if="(index(x-height) = index(small-x-height)) and regular and slanted">
    <delta-set size="4" distance="8"/>
    <delta-set size="9" distance="8"/>
   </delta>
   <move>
    <point num="right-left-top"/>
    <interpolate round="yes">
     <point num="right-left-bottom"/>
     <point num="left-left-top"/>
    </interpolate>
   </move>
  </move>
  
  <with-round-state round="no">
   <with-minimum-distance value="diag-min-thick">
    <diagonal-stem distance="thin-diag" save-vectors="yes" color="black">
     <line ref="left-thinstem"/>
     <line ref="right-thinstem"/>
     <!--    <align>
      <point num="intersect-left"/>
      <point num="intersect-top"/>
     </align>
     <align>
      <point num="intersect-bottom"/>
      <point num="intersect-right"/>
     </align>-->
    </diagonal-stem>
   </with-minimum-distance>
   <diagonal-stem distance="thick-diag" save-vectors="yes" color="black">
    <line ref="left-thickstem"/>
    <line ref="right-thickstem"/>
   </diagonal-stem>
  </with-round-state>
  <compile-if test="slanted = 0">
   <set-equal target="width" source="round(right-right-top -- right-right-bottom)"/>
   <if test="width &lt; 0p">
    <shift-absolute pixel-distance="width">
     <point num="right-left-top"/>
     <point num="right-right-top"/>
    </shift-absolute>
   </if>
  </compile-if>
  <mdap round="yes">
   <point num="left-right-top"/>
  </mdap>
  <mdap round="yes">
   <point num="right-right-bottom"/>
  </mdap>
  <mdap round="yes">
   <point num="left-right-bottom"/>
  </mdap>
  <mdap round="yes">
   <point num="right-right-top"/>
  </mdap>
  <compile-if test="slanted">
   <shift-absolute pixel-distance="-0.03p">
    <point num="left-right-bottom"/>
    <point num="right-right-top"/>
   </shift-absolute>
  </compile-if>
  <move min-distance="no" color="white">
   <reference>
    <point num="right-right-bottom"/>
   </reference>
   <point num="right-bearing"/>
  </move>
  <if test="control-value(index(i-lbearing)) = 0.0">
   <if test="(right-right-bottom -- right-bearing) = 0.0p">
    <shift-absolute pixel-distance="1.0p">
     <point num="right-bearing"/>
    </shift-absolute>
   </if>
  </if>
  
  <with-projection-vector axis="y">
   <with-freedom-vector to-line="parallel">
    <line ref="right-thinstem"/>
    <align>
     <reference>
      <point num="left-left-bottom"/>
     </reference>
     <point num="left-right-bottom"/>
    </align>
    <align>
     <reference>
      <point num="right-left-top"/>
     </reference>
     <point num="right-right-top"/>
    </align>
   </with-freedom-vector>
   <with-freedom-vector to-line="parallel">
    <line ref="right-thickstem"/>
    <align>
     <reference>
      <point num="left-left-top"/>
     </reference>
     <point num="left-right-top"/>
    </align>
    <align>
     <reference>
      <point num="right-left-bottom"/>
     </reference>
     <point num="right-right-bottom"/>
    </align>
   </with-freedom-vector>
  </with-projection-vector>
  
  <move-point-to-intersection>
   <point num="intersect-top"/>
   <line ref="left-thinstem"/>
   <line ref="right-thickstem"/>
  </move-point-to-intersection>
  <move-point-to-intersection>
   <point num="intersect-bottom"/>
   <line ref="right-thinstem"/>
   <line ref="left-thickstem"/>
  </move-point-to-intersection>
  <move-point-to-intersection>
   <point num="intersect-left"/>
   <line ref="left-thinstem"/>
   <line ref="left-thickstem"/>
  </move-point-to-intersection>
  <move-point-to-intersection>
   <point num="intersect-right"/>
   <line ref="right-thinstem"/>
   <line ref="right-thickstem"/>
  </move-point-to-intersection>
  
  <compile-if test="(regular != 0) and (slanted = 0)">
   <!--   <set-vectors axis="x"/> -->
   <if test="(intersect-left -- intersect-right) = 1.0p">
    <shift-absolute pixel-distance="0.05p">
     <point num="intersect-right"/>
    </shift-absolute>
   </if>
  </compile-if>
  
  <interpolate-untouched-points/>
  
 </glyph>
 
 <glyph ps-name="x">
  <call-glyph ps-name="X">
   <with-param name="baseline" value="small-x-baseline"/>
   <with-param name="x-height" value="small-x-height"/>
   <with-param name="thin-diag" value="small-diag"/>
   <with-param name="thick-diag" value="small--diag"/>
   <with-param name="i-lbearing" value="small-i-lbearing"/>
<!--    <with-param name="x-lbearing" value="small-x-lbearing"/> -->
  </call-glyph>
 </glyph>
</xgridfit>