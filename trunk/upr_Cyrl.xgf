<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <!--Cyr l-->
 
 <glyph ps-name="afii10077" init-graphics="yes">
  
  <!--
      
      Copyright (C) 2008, 2010  Andrey V. Panov
      
      This program is free software; you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation; either version 2 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <constant name="curl-left-bottom" value="0"/>
  <constant name="curl-left-top" value="curl-left-bottom + 1"/>
  <constant name="curl-right-top" value="curl-left-top + 2"/>
  <constant name="lstem-left-bottom" value="6"/>
  <constant name="lstem-left-top" value="lstem-left-bottom + 1"/>
  <constant name="rstem-right-top" value="lstem-left-top + 1"/>
  <constant name="rstem-right-bottom" value="rstem-right-top + 1"/>
  <constant name="rstem-left-bottom" value="rstem-right-bottom + 1"/>
  <constant name="rstem-left-top" value="rstem-left-bottom + 1"/>
  <constant name="lstem-right-top" value="rstem-left-top + 1"/>
  <constant name="lstem-right-bottom" value="lstem-right-top + 1"/>
  <constant name="curl-right-bottom" value="lstem-right-bottom + 3"/>
  <constant name="last" value="curl-right-bottom + 1"/>
  
  <compile-if test="slanted">
   <set-projection-vector x-component="x-skew1" y-component="y-skew1"/>
   <set-freedom-vector axis="x"/>
   <set-round-state round="no"/>
   <else>
    <set-vectors axis="x"/>
   </else>
  </compile-if>
  
  <move color="white">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="lstem-left-bottom"/>
   <align>
    <point num="lstem-left-top"/>
   </align>
   <move distance="small-vert-thinstem" color="black">
    <point num="lstem-right-top"/>
    <align>
     <point num="lstem-right-bottom"/>
    </align>
   </move>
   <move distance="small-cyrl-space" color="black">
    <point num="rstem-right-top"/>
    <align>
     <point num="rstem-right-bottom"/>
    </align>
    <move distance="small-vert-stem" color="black">
     <point num="rstem-left-bottom"/>
     <align>
      <point num="rstem-left-top"/>
     </align>
    </move>
    <move color="white">
     <point num="right-bearing"/>
    </move>
   </move>
  </move>
  <compile-if test="slanted">
   <set-equal target="temp" source="left-bearing -- lstem-left-bottom"/>
   <with-round-state round="to-grid">
    <round value="temp" result-to="h-shift"/>
   </with-round-state>
   <multiply value1="h-shift" value2="cos-it-ang"/>
   <set-projection-vector axis="x"/>
   <shift-absolute pixel-distance="h-shift - temp">
    <point num="lstem-left-bottom"/>
    <point num="lstem-left-top"/>
    <point num="lstem-right-top"/>
    <point num="lstem-right-bottom"/>
    <point num="rstem-left-bottom"/>
    <point num="rstem-left-top"/>
    <point num="rstem-right-top"/>
    <point num="rstem-right-bottom"/>
   </shift-absolute>
  </compile-if>
  <interpolate>
   <reference>
    <point num="left-bearing"/>
    <point num="lstem-left-bottom"/>
   </reference>
   <!--    <point num="curl-right-top"/> -->
   <point num="curl-right-top + 1"/>
   <point num="curl-right-bottom - 1"/>
   <!--    <point num="curl-right-bottom"/> -->
  </interpolate>
  <compile-if test="fix-arcs">
   <if test="pixels-per-em &lt;= small-fix-arcs">
    <shift-absolute pixel-distance="0.2p">
     <point num="curl-right-top + 1"/>
    </shift-absolute>
   </if>
  </compile-if>
  
  <compile-if test="slanted">
   <set-freedom-vector x-component="x-skew2" y-component="y-skew2"/>
   <set-projection-vector axis="y"/>
   <set-round-state round="to-grid"/>
   <else>
    <set-vectors axis="y"/>
   </else>
  </compile-if>
  
  <move distance="small-o-baseline">
   <point num="curl-right-bottom"/>
   <move distance="small-curve-hstem" color="black">
    <point num="curl-right-top"/>
   </move>
  </move>
  <move distance="zero">
   <point num="curl-left-bottom"/>
   <align>
    <!--         <point num="curl-right-bottom"/> -->
    <point num="rstem-left-bottom"/>
    <point num="rstem-right-bottom"/>
   </align>
   <move distance="small-horiz-stem" color="black">
    <point num="curl-left-top"/>
    <align>
     <point num="curl-left-top + 1"/>
    </align>
   </move>
  </move>
  <move distance="small-x-height">
   <point num="lstem-left-top"/>
   <align>
    <point num="rstem-right-top"/>
   </align>
   <move distance="small-horiz-stem" color="black">
    <point num="lstem-right-top"/>
    <align>
     <point num="rstem-left-top"/>
    </align>
   </move>
  </move>
  <interpolate-untouched-points/>
 </glyph>
 
</xgridfit>
