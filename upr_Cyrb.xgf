<?xml version="1.0"?>
<xgridfit xmlns="http://xgridfit.sourceforge.net/Xgridfit2">
 <!--"Ð±"-->
 
 <glyph ps-name="afii10066" init-graphics="yes">
  
  <!--
      
      Copyright (C) 2008, 2009, 2010  Andrey V. Panov
      
      This program is free software; you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation; either version 2 of the License, or
      (at your option) any later version.
      
      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General Public License
      along with this program.  If not, see "http://www.gnu.org/licenses/".
      
      -->
  
  <constant name="outer-left" value="0"/>
  <constant name="asc-flat-top-left" value="outer-left + 4"/>
  <constant name="asc-flat-top" value="outer-left + 6"/>
  <constant name="asc-end-left" value="asc-flat-top + 3"/>
  <constant name="asc-end-right" value="asc-end-left + 1"/>
  <constant name="asc-flat-bottom" value="asc-end-right + 3"/>
  <constant name="asc-flat-bottom-left" value="asc-flat-bottom + 2"/>
  <constant name="joint-left" value="19"/>
  <constant name="outer-top" value="23"/>
  <constant name="outer-right" value="outer-top + 3"/>
  <constant name="outer-bottom" value="outer-right + 3"/>
  <constant name="inner-left" value="32"/>
  <constant name="inner-bottom" value="inner-left + 3"/>
  <constant name="inner-right" value="inner-bottom + 3"/>
  <constant name="inner-top" value="inner-right + 3"/>
  <constant name="last" value="inner-top + 2"/>
  <line name="diag-top">
   <point num="asc-flat-top-left"/>
   <point num="asc-flat-top"/>
  </line>
  <line name="diag-bottom">
   <point num="asc-flat-bottom-left"/>
   <point num="asc-flat-bottom"/>
  </line>
  
  <set-vectors axis="y"/>
  <move distance="small-o-baseline">
   <point num="outer-bottom"/>
   <move distance="small-curve-hstem" color="black">
    <point num="inner-bottom"/>
   </move>
  </move>
  <move>
   <point num="asc-end-right"/>
   <align>
    <point num="asc-end-left"/>
   </align>
  </move>
  <!-- <move distance="small-o-height">
   <point num="outer-top"/>
   <move distance="small-curve-hstem" color="black">
    <point num="inner-top"/>
   </move>
  </move>-->
  <interpolate round="yes">
   <reference>
    <point num="outer-bottom"/>
    <point num="asc-end-right"/>
   </reference>
   <point num="asc-flat-top"/>
  </interpolate>
  <!-- <move color="black">
   <reference>
    <point num="asc-flat-top"/>
   </reference>
   <point num="asc-flat-bottom"/>
  </move>-->
  <!-- <interpolate round="yes">
   <reference>
    <point num="outer-bottom"/>
    <point num="asc-flat-bottom"/>
   </reference>
   <point num="outer-top"/>
  </interpolate>-->
  <move color="white">
   <reference>
    <point num="asc-flat-top"/>
   </reference>
   <point num="outer-top"/>
  </move>
  <if test="coord(outer-top) &gt; control-value(index(small-o-height))">
   <move distance="small-o-height">
    <point num="outer-top"/>
   </move>
  </if>
  <move distance="small-curve-hstem" color="black">
   <reference>
    <point num="outer-top"/>
   </reference>
   <point num="inner-top"/>
  </move>
  <interpolate>
   <reference>
    <point num="asc-flat-top"/>
    <point num="outer-top"/>
   </reference>
   <point num="asc-flat-top-left"/>
  </interpolate>
  <if test="pixels-per-em &gt; small-c-flat-ends">
   <mdap round="yes">
    <point num="asc-flat-top-left"/>
   </mdap>
  </if>
  
  <set-vectors axis="x"/>
  <move min-distance="no" distance="small-o-lbearing" color="white">
   <reference>
    <point num="left-bearing"/>
   </reference>
   <point num="outer-left"/>
   <move distance="small-o-curve-stem" color="black">
    <point num="inner-left"/>
    <interpolate>
     <point num="joint-left"/>
     <point num="joint-left + 1"/>
    </interpolate>
   </move>
   <move distance="small-o-space" color="black">
    <point num="outer-right"/>
    <interpolate>
     <point num="asc-flat-top"/>
     <point num="asc-flat-top-left"/>
    </interpolate>
    <move distance="small-o-curve-stem" color="black">
     <point num="inner-right"/>
     <interpolate round="yes">
      <point num="asc-end-right"/>
     </interpolate>
    </move>
    <move compile-if="slanted" min-distance="no" color="white">
     <point num="right-bearing"/>
    </move>
    <move compile-if="not(slanted)" color="white">
     <point num="right-bearing"/>
    </move>
   </move>
   <!--  <move color="black">
    <point num="joint-left - 2"/>
   </move>-->
  </move>
  <move color="black">
   <reference>
    <point num="asc-end-right"/>
   </reference>
   <point num="asc-end-left"/>
  </move>
  <!-- <compile-if test="slanted">
   <set-projection-vector x-component="variable(6)" y-component="negative(variable(7))"/>
  </compile-if>
  <set-equal target="width" source="rbearing-o - (outer-right - - right-bearing)"/>
  <compile-if test="slanted">
   <set-projection-vector axis="x"/>
   <round value="width"/>
  </compile-if>-->
  <set-equal target="width" source="round-white(rbearing-o - (outer-right -- right-bearing))"/>
  <if test="width &gt; 0.0p">
   <shift-absolute pixel-distance="width">
    <point num="right-bearing"/>
   </shift-absolute>
  </if>
  <interpolate>
   <reference>
    <point num="inner-left"/>
    <point num="inner-right"/>
   </reference>
   <point num="outer-top"/>
   <point num="outer-bottom"/>
   <point num="inner-bottom"/>
   <point num="inner-top"/>
  </interpolate>
  <compile-if test="slanted = 0">
   <with-round-state round="to-double-grid">
    <mdap round="yes">
     <point num="outer-bottom"/>
    </mdap>
    <mdap round="yes">
     <point num="inner-bottom"/>
    </mdap>
   </with-round-state>
  </compile-if>
  <compile-if test="fix-arcs">
   <if test="pixels-per-em &lt;= small-fix-arcs">
    <interpolate>
     <reference>
      <point num="inner-left"/>
      <point num="inner-right"/>
     </reference>
     <point num="outer-bottom - 1"/>
     <point num="outer-bottom + 1"/>
     <point num="outer-top - 1"/>
     <point num="outer-top + 1"/>
     <point num="inner-bottom - 1"/>
     <point num="inner-bottom + 1"/>
     <point num="inner-top - 1"/>
     <point num="inner-top + 1"/>
    </interpolate>
    <shift-absolute pixel-distance="-0.28p">
     <point num="outer-bottom - 1"/>
     <point num="inner-bottom - 1"/>
    </shift-absolute>
    <shift-absolute pixel-distance="0.28p">
     <point num="inner-top - 1"/>
     <point num="inner-bottom + 1"/>
     <point num="outer-top - 1"/>
     <point num="outer-bottom + 1"/>
    </shift-absolute>
    <shift-absolute pixel-distance="-0.4p">
     <point num="outer-top + 1"/>
    </shift-absolute>
   </if>
  <delta compile-if="(slanted = 0) and regular">
   <delta-set size="7" distance="-2">
     <point num="outer-top + 1"/>
     <point num="outer-top"/>
   </delta-set>
  </delta>
  </compile-if>
  
  <diagonal-stem distance="small-thindiag" round="no" save-vectors="yes" min-amount="diag-min-thick" color="black">
   <line ref="diag-top"/>
   <line ref="diag-bottom"/>
  </diagonal-stem>
  <with-projection-vector to-line="parallel">
   <line ref="diag-top"/>
   <with-freedom-vector to-line="parallel">
    <line ref="diag-top"/>
    <interpolate>
     <reference>
      <point num="asc-flat-top-left"/>
      <point num="asc-flat-top"/>
     </reference>
     <point num="asc-flat-bottom-left"/>
     <point num="asc-flat-bottom"/>
    </interpolate>
   </with-freedom-vector>
  </with-projection-vector>
  <interpolate-untouched-points/>
 </glyph>
 
</xgridfit>
